<template>
	<view class="media-item view" hover-class="media-item-hover" v-if="options.title">
		<view class="view" :style="{ flexDirection: 'column' }" @click="click">
			<text class="media-title">{{ options.title }}</text>
			<text class="media-title2" v-if="!options.image">{{ options.text }}</text>
			<view v-if="options.image || options.image_url" class="image-section flex-row" :style="{ flexDirection: 'row' }">
				<image class="image-list1" v-if="options.image" :src="options.image[0]" resize="cover"></image>
			</view>
		</view>
		<view class="media-foot flex-row" style="flex-direction: row;" @click.stop="test">
			<view class="media-info flex-row" style="flex-direction: row;">
				<text class="iconfont info-text2">&#xe632;</text>
				<text class="info-text">{{ praseTime(options.time) }}</text>
				<text class="iconfont info-text2">&#xe681;</text>
				<text class="info-text">{{ options.cmtcount }}</text>
				<text class="iconfont info-text2">&#xe612;</text>
				<text class="info-text">{{ options.viewcount }}</text>
			</view>
			<view class="max-close-view" @click.stop="close">
				<view class="close-l close-h"></view>
				<view class="close-l close-v"></view>
			</view>
		</view>
		<view class="media-item-line" style="position: absolute;"></view>
	</view>
</template>

<script>
export default {
	props: {
		options: {
			type: Object,
			default: function(e) {
				return {};
			}
		}
	},
	methods: {
		test() {},
		click() {
			this.$emit('click');
		},
		close(e) {
			this.$emit('close');
		},
		praseTime(time) {
			return time.substring(5, 16);
		}
	},
	created() {
		var domModule = weex.requireModule('dom');
		domModule.addRule('fontFace', {
			fontFamily: 'iconfont',
			src: "url('http://at.alicdn.com/t/font_1387774_s0nje54xies.ttf')"
		});
	}
};
</script>

<style>
.iconfont {
	font-family: iconfont;
}
.icon-like {
	width: 36px;
	height: 36px;
	font-size: 34px;
}
.view {
	flex-direction: column;
}

.flex-row {
	flex-direction: row;
}

.flex-col {
	flex-direction: column;
}

.list-cell {
	width: 750upx;
	padding: 0 30upx;
}

.uni-list-cell-hover {
	background-color: #eeeeee;
}

.media-item {
	position: relative;
	flex: 1;
	flex-direction: column;
	background-color: #FAFAFA;
	padding: 20upx 30upx 21upx 30upx;
}

.media-item-hover {
	background-color: #eee;
}

.media-item-line {
	position: absolute;
	left: 30upx;
	right: 30upx;
	bottom: 0;
	height: 1upx;
	background-color: #ebebeb;
}

.media-image-right {
	flex-direction: row;
}

.media-image-left {
	flex-direction: row-reverse;
}

.media-title {
	flex: 1;
}

.media-title {
	lines: 1;
	text-overflow: ellipsis;
	font-size: 30upx;
	color: #333333;
}

.media-title2 {
	flex: 1;
	margin-top: 10upx;
	color: #999999;
	font-size: 26upx;
	line-height: 30upx;
}

.image-section {
	margin-top: 20upx;
	flex-direction: row;
	justify-content: space-between;
}

.image-section-right {
	margin-top: 0upx;
	margin-left: 10upx;
	width: 225upx;
	height: 146upx;
}

.image-section-left {
	margin-top: 0upx;
	margin-right: 10upx;
	width: 225upx;
	height: 146upx;
}

.image-list1 {
	width: 690upx;
	height: 481upx;
}

.image-list2 {
	width: 225upx;
	height: 146upx;
}

.image-list3 {
	width: 225upx;
	height: 146upx;
}

.media-info {
	flex-direction: row;
	align-items: center;
}

.info-text {
	margin-right: 20upx;
	color: #999999;
	font-size: 24upx;
}
.info-text2 {
	margin-right: 5upx;
	color: #999999;
	font-size: 24upx;
}

.media-foot {
	margin-top: 25upx;
	flex-direction: row;
	align-items: center;
	justify-content: space-between;
}

.max-close-view {
	position: relative;
	align-items: center;
	flex-direction: row;
	width: 40upx;
	height: 30upx;
	line-height: 30upx;
	border-width: 1upx;
	border-style: solid;
	border-color: #aaaaaa;
	border-radius: 4px;
	justify-content: center;
	text-align: center;
}

.close-l {
	position: absolute;
	width: 18upx;
	height: 1upx;
	background-color: #aaaaaa;
}

.close-h {
	transform: rotate(45deg);
}

.close-v {
	transform: rotate(-45deg);
}
</style>
